{"version":3,"file":"index.js","mappings":"MACA,IACIA,EAAeC,SAASC,cAAc,KAAK,EAC3CC,EAAQ,KACRC,EAAY,KACZC,EAAiB,KACjBC,EAAe,GACfC,EAAgB,GAChBC,EAAkB,KAClBC,EAAa,GACbC,EAAST,SAASC,cAAc,QAAQ,EAGxCS,EACS,iBADTA,EAEK,0BAuFT,SAASC,IACFX,SAASY,KAAKC,SAASd,CAAY,GACtCI,EAAUW,YAAYf,CAAY,EA9EhCM,IACJU,aAAaX,CAAc,EAC3BC,EAAe,GACfD,EAAiBY,WAAW,WAC1BD,aAAaX,CAAc,EAC3BA,EAAiBY,WAAW,WAC1B,GAAI,CAACd,EAAO,OAAOG,EAAe,GAGlC,IAAIY,EAAYjB,SAASC,cAAc,QAAQ,EAC3CiB,EAAU,WAEZ,IAAIC,EAAUV,EAAOW,cAAcD,QAGnCF,EAAUG,cAAcC,SAAS,EAAGF,CAAO,EAG3CV,EAAOa,OAAO,EAKdjB,EAAe,IAFfI,EAASQ,GAKCM,oBAAoB,OAAQL,CAAO,CAC/C,EAGAD,EAAUO,UAAYf,EAAOe,UAC7BzB,EAAae,YAAYG,CAAS,EAGlCA,EAAUQ,iBAAiB,OAAQP,CAAO,EAG1CD,EAAUS,IAAMxB,EAAMyB,KACxB,EAAG,GAAG,CACR,EAAG,GAAG,EA4CR,CA1FAlB,EAAOiB,IAlBU,cAmBjBjB,EAAOe,UAAY,2BACnBzB,EAAa6B,UAAUC,IAAI,kBAAkB,EAC7C9B,EAAae,YAAYL,CAAM,EAiG/B,IAlDMqB,EAGAC,EA+CFC,EAA0B,IAAIC,qBAAqB,SAAUC,GAE/DA,EAAQC,QAAQ,SAAUC,GACpBA,EAAMC,gBACR/B,EAAcgC,KAAKF,CAAK,EAE1BJ,EAAwBO,UAAUH,EAAMI,MAAM,CAChD,CAAC,CACH,CAAC,EACc,IAAIC,iBAAiB,SAAUC,GAE5C3B,aAAaR,CAAe,EAG5BA,EAAkBS,WAAW,WAE3BV,EAAcqC,OAAS,CACzB,EAAG,EAAE,EAGLzC,EAAQF,SAAS4C,cAAclC,CAAe,EAE9CP,EAAYH,SAAS4C,cAAclC,CAAmB,EAGtDgC,EAAUP,QAAQ,SAAUU,GAC1BA,EAASC,WAAWX,QAAQ,SAAUY,GACd,IAAlBA,EAAKC,UACLjD,EAAac,SAASkC,CAAI,GAC9Bf,EAAwBiB,QAAQF,CAAI,CACtC,CAAC,CACH,CAAC,GAG2B,GAAxBzC,EAAcqC,QAAeO,OAAOC,SAASC,OAAS5C,KAExDA,EAAa0C,OAAOC,SAASC,KAG7B9C,EAAcqC,OAAS,EACvBU,QAAQC,IAAI,kBAAkB,EAE9BpD,GAASC,EAAYQ,EAAW,GAjDlCH,EAAa,GAGTR,SAASY,KAAKC,SAASd,CAAY,GACrCA,EAAauB,OAAO,GA+CxB,CAAC,EAGQ2B,QAAQjD,SAASY,KAAM,CAC9B2C,UAAW,GACXC,QAAS,EACX,CAAC,EApGK1B,EAAa,IAGbC,EAAQ/B,SAASC,cAAc,QAAQ,GAGrC2B,UAAUC,IAAI,yBAAyB,EAG7C9B,EAAae,YAAYiB,CAAK,EAG9BA,EAAMN,iBAAiB,YAAa,WAElCK,EAAa,GACb/B,EAAa6B,UAAUC,IAAI,UAAU,CACvC,CAAC,EACDqB,OAAOzB,iBAAiB,UAAW,WAEjCK,EAAa,GACb/B,EAAa6B,UAAUN,OAAO,UAAU,CAC1C,CAAC,EACD4B,OAAOzB,iBAAiB,YAAa,SAAUgC,GAE7CP,OAAOQ,sBAAsB,WAE3B,IAEIC,EAFC7B,IACD8B,EAASH,EAAEI,QAAU,GACrBF,EAAQT,OAAOY,WAAaF,EAChC5D,SAASY,KAAKmD,MAAMC,YAAY,kBAAmB,GAAGC,OAAON,EAAO,IAAI,CAAC,EAC3E,CAAC,CACH,CAAC,C","sources":["webpack://open-cms-preview/./client/source/scripts/index.js"],"sourcesContent":["import '../styles/index.scss';\nvar defaultSrc = 'about:blank';\nvar previewPanel = document.createElement('div');\nvar input = null;\nvar container = null;\nvar refreshTimeout = null;\nvar isRefreshing = false;\nvar mutationCount = [];\nvar mutationTimeout = null;\nvar currentURL = '';\nvar iframe = document.createElement('iframe');\n\n// Selectors for the input and preview panel elements\nvar selectors = {\n  container: '.cms-container',\n  input: '[name=\"OpenCMSPreview\"]'\n};\n\n// Set up some classes and put the iframe into the preview panel\niframe.src = defaultSrc;\niframe.className = 'open-cms-preview__iframe';\npreviewPanel.classList.add('open-cms-preview');\npreviewPanel.appendChild(iframe);\n\n// Function to update the preview src\nfunction updatePreview() {\n  if (isRefreshing) return;\n  clearTimeout(refreshTimeout);\n  isRefreshing = true;\n  refreshTimeout = setTimeout(function () {\n    clearTimeout(refreshTimeout);\n    refreshTimeout = setTimeout(function () {\n      if (!input) return isRefreshing = false;\n\n      // Create a new iframe element\n      var newIframe = document.createElement('iframe');\n      var _onLoad = function onLoad() {\n        // Get the scroll position of the old iframe\n        var scrollY = iframe.contentWindow.scrollY;\n\n        // Set the scroll position of the new iframe\n        newIframe.contentWindow.scrollTo(0, scrollY);\n\n        // Remove the old iframe\n        iframe.remove();\n\n        // Set the new iframe as the current iframe\n        iframe = newIframe;\n        // Set isRefreshing to false\n        isRefreshing = false;\n\n        // Remove the load event listener\n        newIframe.removeEventListener('load', _onLoad);\n      };\n\n      // Set the new iframe class to the current iframe class\n      newIframe.className = iframe.className;\n      previewPanel.appendChild(newIframe);\n\n      // When the newIframe is loaded, remove the old iframe and show the new one\n      newIframe.addEventListener('load', _onLoad);\n\n      // Set the new iframe src to the input value\n      newIframe.src = input.value;\n    }, 500);\n  }, 500);\n}\nfunction makePreviewResizeable() {\n  // We will toggle this to toggle the dragging state\n  var isDragging = false;\n\n  // Create a new button element to drag the preview width\n  var thumb = document.createElement('button');\n\n  // Add a class\n  thumb.classList.add('open-cms-preview__thumb');\n\n  // Add the thumb to the preview\n  previewPanel.appendChild(thumb);\n\n  // Add a mouse down event listener\n  thumb.addEventListener('mousedown', function () {\n    // Set dragging to true\n    isDragging = true;\n    previewPanel.classList.add('dragging');\n  });\n  window.addEventListener('mouseup', function () {\n    // Set dragging to false\n    isDragging = false;\n    previewPanel.classList.remove('dragging');\n  });\n  window.addEventListener('mousemove', function (e) {\n    // Set the width of the preview\n    window.requestAnimationFrame(function () {\n      // If we are not dragging, return\n      if (!isDragging) return;\n      var mouseX = e.clientX - 10;\n      var width = window.innerWidth - mouseX;\n      document.body.style.setProperty('--preview-width', \"\".concat(width, \"px\"));\n    });\n  });\n}\nfunction addPreview() {\n  if (!document.body.contains(previewPanel)) {\n    container.appendChild(previewPanel);\n  }\n\n  // Update the preview\n  updatePreview();\n}\nfunction removePreview() {\n  // Clear the current URL\n  currentURL = '';\n\n  // Remove the preview panel if it exists\n  if (document.body.contains(previewPanel)) {\n    previewPanel.remove();\n  }\n}\nvar VisibleMutationObserver = new IntersectionObserver(function (entries) {\n  // Loop through each entry and check if it is visible\n  entries.forEach(function (entry) {\n    if (entry.isIntersecting) {\n      mutationCount.push(entry);\n    }\n    VisibleMutationObserver.unobserve(entry.target);\n  });\n});\nvar Observer = new MutationObserver(function (mutations) {\n  // Clear the previous timeout\n  clearTimeout(mutationTimeout);\n\n  // Set a timeout to reset the mutation count after 1 second\n  mutationTimeout = setTimeout(function () {\n    // Clear the previous visible mutations\n    mutationCount.length = 0;\n  }, 50);\n\n  // Check if the input exists\n  input = document.querySelector(selectors.input);\n  // Check if the container exists\n  container = document.querySelector(selectors.container);\n\n  // Loop through each mutation and check for elements that were added (excluding the preview panel)\n  mutations.forEach(function (mutation) {\n    mutation.addedNodes.forEach(function (node) {\n      if (node.nodeType !== 1) return;\n      if (previewPanel.contains(node)) return;\n      VisibleMutationObserver.observe(node);\n    });\n  });\n\n  // Check if there are 3 or more mutations within 50ms\n  if (mutationCount.length >= 3 || window.location.href !== currentURL) {\n    // Update the current URL\n    currentURL = window.location.href;\n\n    // Clear the previous visible mutations\n    mutationCount.length = 0;\n    console.log('updating preview');\n    // Show or hide the preview based on the presence of the input\n    input && container ? addPreview() : removePreview();\n  }\n});\n\n// Watch the body for changes\nObserver.observe(document.body, {\n  childList: true,\n  subtree: true\n});\nmakePreviewResizeable();"],"names":["previewPanel","document","createElement","input","container","refreshTimeout","isRefreshing","mutationCount","mutationTimeout","currentURL","iframe","selectors","addPreview","body","contains","appendChild","clearTimeout","setTimeout","newIframe","_onLoad","scrollY","contentWindow","scrollTo","remove","removeEventListener","className","addEventListener","src","value","classList","add","isDragging","thumb","VisibleMutationObserver","IntersectionObserver","entries","forEach","entry","isIntersecting","push","unobserve","target","MutationObserver","mutations","length","querySelector","mutation","addedNodes","node","nodeType","observe","window","location","href","console","log","childList","subtree","e","requestAnimationFrame","width","mouseX","clientX","innerWidth","style","setProperty","concat"],"sourceRoot":""}